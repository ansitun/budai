security:
    encoders:
        FOS\UserBundle\Model\UserInterface:
            algorithm:           sha1
            encode_as_base64:    false
            iterations:          1

    role_hierarchy:
        
        ROLE_SONATA_USER_READER: [ROLE_SONATA_ADMIN_USER_LIST, ROLE_SONATA_ADMIN_USER_VIEW]
        ROLE_SONATA_USER_ADMIN: [ROLE_SONATA_USER_READER, ROLE_SONATA_ADMIN_USER_DELETE, ROLE_SONATA_ADMIN_USER_EXPORT, ROLE_SONATA_ADMIN_USER_CREATE, ROLE_SONATA_ADMIN_USER_EDIT]
        
        ROLE_VENDOR_ADMIN: [ROLE_USER]
        
        ROLE_SUPER_ADMIN: [ROLE_ALLOWED_TO_SWITCH, ROLE_VENDOR_ADMIN, ROLE_USER, ROLE_SONATA_USER_ADMIN]
        
    access_decision_manager:
    # Strategy can be: affirmative, unanimous or consensus
        strategy: consensus
        
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                use_referer: true
                always_use_default_target_path: false
                default_target_path: /
                failure_path:    /
                failure_forward: false
                remember_me:    true
                require_previous_session: true
                
#            remember_me:
#                key:      "%secret%"
#                lifetime: 3600
#                domain:   ~
#                always_remember_me: true
#                remember_me_parameter: _remember_me
                
            anonymous:    true
            logout:
                path: fos_user_security_logout
#                target: /docs
                
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        secured_area:
            pattern:  ^/admin
#            provider: fos_userbundle
            form_login:
                check_path: /admin
                login_path: /admin
                
            pattern:   ^/
            form_login:
                check_path: ~
                login_path: ~
                
            logout:
#                path:   fos_user_security_logout
                target: /admin/
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        #- { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: [ROLE_SUPER_ADMIN] }
        - { path: ^/efconnect, role: ROLE_ADMIN }
        - { path: ^/elfinder, role: ROLE_ADMIN }
